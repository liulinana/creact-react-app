{"version":3,"sources":["axios/axios.js","images/d9c59dcb17dacafac0aa06510ea23c52.jpg","page/login/Login.jsx","component/Container.js"],"names":["axios","defaults","baseURL","http","get","post","delete","put","patch","head","request","headers","Content-Type","Access-Control-Allow-Origin","Access-Control-Allow-Methods","Access-Control-Allow-Headers","ajaxPromise","method","url","data","Promise","resolve","reject","Object","_Users_liulina_Documents_webFeilds_creact_react_app1_1_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","then","res","catch","err","antd_lib_message__WEBPACK_IMPORTED_MODULE_1___default","a","error","message","params","JSON","stringify","module","exports","__webpack_require__","p","FormItem","antd_lib_form__WEBPACK_IMPORTED_MODULE_18___default","Item","loginStyle","background","concat","backgroundRepeat","backgroundSize","height","document","body","offsetHeight","Login","create","state","status","register","forgotPassword","msgPassword","handleSubmit","e","preventDefault","_this$props$form$getF","_this","props","form","getFieldsValue","loginName","passwd","email","nickname","loginname","loginpw","param","validateFields","setCurrentLoginUser","isAuthenticated","history","push","antd_lib_message__WEBPACK_IMPORTED_MODULE_11___default","success","handelRegister","resetFields","setState","handelPassword","regType","rule","value","callback","field","test","getFieldDecorator","this","_this$state","react__WEBPACK_IMPORTED_MODULE_19___default","createElement","style","className","onSubmit","rules","required","antd_lib_input__WEBPACK_IMPORTED_MODULE_7___default","prefix","antd_lib_icon__WEBPACK_IMPORTED_MODULE_9___default","type","color","placeholder","validator","antd_lib_row__WEBPACK_IMPORTED_MODULE_3___default","antd_lib_col__WEBPACK_IMPORTED_MODULE_5___default","span","textAlign","onClick","antd_lib_button__WEBPACK_IMPORTED_MODULE_1___default","htmlType","width","Component","d","__webpack_exports__","Containerization","toLogin","react_redux__WEBPACK_IMPORTED_MODULE_0__","react_router_dom__WEBPACK_IMPORTED_MODULE_1__","mapStateToProps","withRouter","connect","currentLoginUser","window","sessionStorage","getItem","parse","getCurrentLoginUser","setItem","location","pathname","indexOf","removeItem","href"],"mappings":"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","file":"static/js/4.bc042d78.chunk.js","sourcesContent":["import axios from 'axios';\nimport { message } from 'antd';\n\naxios.defaults.baseURL = '';\n\nlet http = {\n    get:\"\",\n    post:\"\",\n    delete:\"\",\n    put:\"\",\n    patch:\"\",\n    head:\"\",\n    request:\"\"\n};\n\nexport const headers = {\n    \"Content-Type\": \"application/json\",\n    'Access-Control-Allow-Origin': '*',\n    \"Access-Control-Allow-Methods\": \"GET,POST,PUT,DELETE,OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\"\n};\n\nconst ajaxPromise =function (method, url, data){\n    return new Promise ( (resolve,reject) => {\n        axios({\n                url,\n                method: method,\n                headers:{...headers},\n                data: data\n            }).then(\n            (res) => {\n                resolve(res)\n            }\n        ).catch(\n            err => {\n                message.error(err.message, 3)\n                reject(err);\n            }\n        )\n    })\n};\n\nhttp.get = function (url,data) {\n    let params = JSON.stringify(data);\n    let method = \"get\";\n    return ajaxPromise(method,url,params)\n\n};\n\nhttp.post = function (url,data) {\n    let params = JSON.stringify(data);\n    let method = \"post\";\n    return ajaxPromise(method,url,params)\n\n};\n\nexport default http;\n","module.exports = __webpack_public_path__ + \"static/media/d9c59dcb17dacafac0aa06510ea23c52.78fc9967.jpg\";","import React, { Component } from 'react';\nimport { Form, Input, Button, message, Row, Col, Icon } from 'antd';\nimport './Login.less';\nimport { isAuthenticated, setCurrentLoginUser } from '../../component/Container';\nimport background from '../../images/d9c59dcb17dacafac0aa06510ea23c52.jpg';\nimport http from '../../axios/axios';\n\nconst FormItem = Form.Item;\nconst loginStyle = {\n    background:`url(${background})`,\n    backgroundRepeat: \"noRepeat\",\n    backgroundSize: \"cover\",\n    height: document.body.offsetHeight\n}\n@Form.create()\nexport default class Login extends Component {\n    // static getDerivedStateFromProps(){}\n\n    state = {\n        status: \"Log in\",\n        register: \"register now!\",\n        forgotPassword: 'Forgot password',\n        msgPassword: \"Password\"\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const  { loginName, passwd, email, nickname } = this.props.form.getFieldsValue();\n        const { status } = this.state;\n        const res = {\n            loginname:loginName,\n            loginpw:passwd,\n            email,\n            nickname\n        };\n        const param = {\n            loginName,\n            passwd,\n            email,\n            nickname\n        };\n        this.props.form.validateFields((err) => {\n            if (!err) {\n                if(this.state.status === \"Log in\"){\n                    setCurrentLoginUser(param)\n                }\n                if(status === \"Log in\"){\n                    http.post(`/princess/login`,param).then(\n                        res => {\n\n                        }\n                    )\n                }else if(status === \"register now!\"){\n                    http.post(`/princess/register`,res).then(\n                        res => {\n\n                        }\n                    )\n                }else{\n                    http.get(`/princess/getuserinfo?loginName=${loginName}&passwd=${passwd}&email=${email}&nickname=${nickname}`).then(\n                        res => {\n\n                        }\n                    )\n                }\n                if (loginName === '123' && passwd === '123') {\n                    // 表单的路由处理\n                    if(isAuthenticated()) {\n                        this.props.history.push('/read')\n                        message.success(\"登陆成功!\");\n                    }\n\n                } else if (loginName === '123' && passwd !== '123') {\n                    message.error(\"请输入正确的密码！\")\n                } else {\n                    message.error(\"请输入正确的用户名字！\")\n                }\n            }\n        });\n    };\n\n    handelRegister = () => {\n        this.props.form.resetFields();\n        const { register } = this.state;\n        if(register === \"register now!\"){\n            this.setState({\n                status:\"register\",\n                register:\"Log in\",\n                msgPassword:\"Password\"\n            })\n        }else{\n            this.setState({\n                status:\"Log in\",\n                register:\"register now!\",\n                msgPassword:\"Password\",\n                forgotPassword: 'Forgot password'\n            })\n        }\n    };\n\n    handelPassword = () => {\n        this.props.form.resetFields();\n        this.setState({\n            status:\"reset password\",\n            register:\"Log in\",\n            forgotPassword: \"\",\n            msgPassword:\"newPassword\"\n        })\n    };\n\n    regType = (rule, value, callback) => {\n        /* eslint-disable */\n        const reg = /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/;\n        /* eslint-enable */\n        if (value && value !== '') {\n            if (rule.field === \"email\") {  //身份证号码\n                if (!reg.test(value)) {\n                    callback('邮箱格式不正确!');\n                    return;\n                }\n            }\n        }\n        callback();\n    };\n\n    render() {\n        const { form } = this.props;\n        const { getFieldDecorator } = form;\n        const { status, register, forgotPassword, msgPassword } = this.state;\n        return (\n                <div style={loginStyle}>\n                    <div className=\"box\">\n                        <p>小仙女才能登陆的系统</p>\n                        <br/>\n                        <div className=\"loginWrap\">\n                            <Form className=\"login-form\" onSubmit={this.handleSubmit}>\n                                <FormItem>\n                                    {getFieldDecorator('loginName', {\n                                        rules: [{ required: true, message: '请输入用户名!' }],\n                                    })(\n                                        <Input\n                                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                            placeholder=\"Username\"\n                                        />\n                                    )}\n                                </FormItem>\n                                <FormItem>\n                                    {getFieldDecorator('passwd', {\n                                        rules: [{ required: true, message: status === \"reset password\"?\"请输入新密码!\":\"请输入密码!\" }],\n                                    })(\n                                        <Input\n                                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                            type=\"password\" placeholder={msgPassword}\n                                        />,\n                                    )}\n                                </FormItem>\n                                {\n                                    status === \"Log in\" ?null: status !== \"register\" ?\n                                        <FormItem>\n                                            {getFieldDecorator('email', {\n                                                rules: [{ required: true, message: '请输入邮箱!' },\n                                                    { validator: this.regType}\n                                                ],\n                                            })(\n                                                <Input\n                                                    prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                                    type=\"email\" placeholder=\"Email\"\n                                                />,\n                                            )}\n                                        </FormItem>\n                                        :\n                                        <div>\n                                            <FormItem>\n                                                {getFieldDecorator('email', {\n                                                    rules: [{ required: true, message: '请输入邮箱!' },\n                                                        { validator: this.regType}\n                                                    ],\n                                                })(\n                                                    <Input\n                                                        prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                                        placeholder=\"Email\"\n                                                    />,\n                                                )}\n                                            </FormItem>\n                                            <FormItem>\n                                                {getFieldDecorator('nickname', {\n                                                    rules: [{ required: true, message: '请输入昵称!' },\n                                                        { validator: this.regType}\n                                                    ],\n                                                })(\n                                                    <Input\n                                                        prefix={<Icon type=\"heart-o\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                                        placeholder=\"nickname\"\n                                                    />,\n                                                )}\n                                            </FormItem>\n                                        </div>\n\n\n                                }\n                                <Row>\n                                    <Col span={12} style={{textAlign: \"left\"}}>\n                                        <a onClick={this.handelPassword}>{forgotPassword}</a>\n                                    </Col>\n                                    <Col span={12} style={{textAlign: \"right\"}}>\n                                        <a onClick={this.handelRegister}>{register}</a>\n                                    </Col>\n                                </Row>\n                                <br/>\n                                <Row>\n                                    <Button\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        className=\"login-form-button\"\n                                        style={{width: \"100%\"}}\n                                    >\n                                        {status}\n                                    </Button>\n                                </Row>\n                            </Form>\n                        </div>\n                    </div>\n                </div>\n        )\n    }\n}\n\n","import { connect } from 'react-redux';\nimport { withRouter } from \"react-router-dom\";\n\n// const mapStateToProps = state => (state,\n//     console.log(\"mapStateToProps\",state)\n// );\n//\n// const mapDispatchToProps = dispatch => (bindActionCreators(action, dispatch),\n//     console.log(\"mapDispatchToProps\",bindActionCreators(action, dispatch))\n// );\n// export default withRouter(connect(mapStateToProps(), mapDispatchToProps()))\n\nexport const Containerization = (mapStateToProps) =>(Component)=> {\n    if(mapStateToProps ){\n        return withRouter(connect(mapStateToProps)(Component))\n    } else {\n        return withRouter(Component);\n    }\n\n};\n\n/**\n * 是否登录\n * @returns {boolean}\n */\nexport function isAuthenticated() {\n    return !!getCurrentLoginUser();\n}\n\n/**\n * 获取当前登录用户\n * @returns {null}\n */\nexport function getCurrentLoginUser() {\n    const currentLoginUser = window.sessionStorage.getItem('currentLoginUser');\n    return currentLoginUser ? JSON.parse(currentLoginUser) : null;\n}\n\n/**\n * 设置当前登录用户\n * @param currentLoginUser\n */\nexport function setCurrentLoginUser(currentLoginUser) {\n    window.sessionStorage.setItem('currentLoginUser', JSON.stringify(currentLoginUser));\n}\n\n/**\n * 跳转到登录页面\n * @returns {null}\n */\nexport function toLogin() {\n    const loginPath = '/';\n    const pathname = window.location.pathname;\n    const isLogin = pathname.indexOf(loginPath) !== -1;\n    if (isLogin) window.sessionStorage.removeItem(\"currentLoginUser\");\n    window.sessionStorage.setItem('last-href', window.location.href);\n    window.location.href = loginPath;\n\n    return null;\n}"],"sourceRoot":""}