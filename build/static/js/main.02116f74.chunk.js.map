{"version":3,"sources":["redux/actionTypes.js","serviceWorker.js","redux/reducers/reducer1.js","redux/reducers/reducers.js","redux/reducers/rootReducer.js","router/Router.js","index.js","redux/actions.js","router/Routers.config.js"],"names":["__webpack_require__","d","__webpack_exports__","ADD_TODO","TOGGLE_TODO","SET_VISIBILITY_FILTER","ADD_TODO_S","Boolean","window","location","hostname","match","initialState","visibilityFilter","VisibilityFilters","todos","selectsData","rootReducer","combineReducers","state","arguments","length","undefined","action","type","filter","promise","then","res","data","Object","objectSpread","payload","content","map","todo","index","assign","completed","store","createStore","applyMiddleware","thunk","route","path","exact","component","Routers","Router","react_default","a","createElement","react_redux_es","BrowserRouter","Switch","v","k","Route","key","React","Component","ReactDOM","render","Router_Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister","addTodo","_actionTypes__WEBPACK_IMPORTED_MODULE_0__","SHOW_ALL","SHOW_COMPLETED","SHOW_ACTIVE","nextTodoId","id","Login","App","mockPage","ReadingRoom","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_loadable__WEBPACK_IMPORTED_MODULE_1__","react_loadable__WEBPACK_IMPORTED_MODULE_1___default","LoadingComponent","_ref","isLoading","error","Loadable","loader","Promise","all","e","bind","loading"],"mappings":"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","file":"static/js/main.02116f74.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\nexport const ADD_TODO_S = \"ADD_TODO_S\";\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { VisibilityFilters } from '../actions'\nimport { SET_VISIBILITY_FILTER } from '../actionTypes';\n\nconst initialState = {\n    visibilityFilter: VisibilityFilters,\n    todos: []\n};\n\n\nexport function visibilityFilter(state = initialState, action) {\n    switch (action.type) {\n        case SET_VISIBILITY_FILTER:\n            return action.filter;\n        default:\n            return state\n    }\n}\n","import { VisibilityFilters } from '../actions'\nimport { ADD_TODO, TOGGLE_TODO,ADD_TODO_S } from '../actionTypes';\n\nconst initialState = {\n    visibilityFilter: VisibilityFilters,\n    todos: [],\n    selectsData:\"小仙女才能登陆的系统\",\n};\n\n// export default handleAction ({\n//     ADD_TODO(state,action){\n//         return [\n//             ...state,\n//             {\n//                 text: action.payload.content,\n//                 completed: false\n//             }\n//         ]\n//     },\n//     TOGGLE_TODO(state,action){\n//         return state.map((todo, index) => {\n//             if (index === action.index) {\n//                 return Object.assign({}, todo, {\n//                     completed: !todo.completed\n//                 })\n//             }\n//             return todo\n//         })\n//     }\n// })\n// { handleAction } 导入 'redux-actions';\n\nexport function todos(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TODO_S:\n            const data = null;\n            action.promise().then(res=>({data:res}))\n            return {\n                ...state,\n                selectsData:data ===null?\"null\":data\n            };\n        case ADD_TODO:\n            return {\n                ...state,\n                selectsData: action.payload.content\n            };\n        case TOGGLE_TODO:\n            return state.map((todo, index) => {\n                if (index === action.index) {\n                    return Object.assign({}, todo, {\n                        completed: !todo.completed\n                    })\n                }\n                return todo\n            });\n        default:\n            return state\n    }\n}\n\n\n","import { visibilityFilter } from './reducer1';\nimport { todos } from './reducers';\nimport { combineReducers } from 'redux';\n\n\nconst rootReducer = combineReducers({\n    visibilityFilter,\n    todos\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport *as Routers from './Routers.config';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promise from 'redux-promise';\nimport rootReducer from '../redux/reducers/rootReducer';\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunk,promise)\n);\n\nconst route = [\n    {path:\"/\",exact:true,component:Routers.Login},\n    {path:\"/frame\",exact:false,component:Routers.App},\n    {path:\"/read\",exact:true,component:Routers.ReadingRoom},\n];\n\nexport default class Router extends React.Component{\n     render () {\n         return (\n             <div>\n                 <Provider store={store}>\n                     <BrowserRouter>\n                         <Switch>\n                             {route.map((v,k)=>(\n                                 <Route\n                                     key={k}\n                                     path={v.path}\n                                     exact={v.exact}\n                                     component={v.component}\n                                 />\n                             ))}\n                         </Switch>\n                     </BrowserRouter>\n                 </Provider>\n             </div>\n         )\n     }\n }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Router from './router/Router'\n\n\nReactDOM.render(<Router/>\n, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { ADD_TODO, TOGGLE_TODO, SET_VISIBILITY_FILTER } from './actionTypes'\nexport const VisibilityFilters = {\n    SHOW_ALL: 'SHOW_ALL',\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\n};\n\n/*\n * action 创建函数\n */\n\nlet nextTodoId = 0;\nexport const addTodo = content => ({\n    type: ADD_TODO,\n    payload: {\n        id: ++nextTodoId,\n        content\n    }\n});\n\nexport function toggleTodo(index) {\n    return { type: TOGGLE_TODO, index }\n}\n\nexport function setVisibilityFilter(filter) {\n    return { type: SET_VISIBILITY_FILTER, filter }\n}\n\n","import React from 'react';\nimport Loadable from 'react-loadable';\n\nconst LoadingComponent = ({ isLoading, error }) => {\n    if (isLoading) {\n        return <div>Loading...</div>;\n    }\n    else if (error) {\n        return <div>小主真可怜,未找到此页面.</div>;\n    }\n    else {\n        return null;\n    }\n};\n\nexport const Login = Loadable({\n    loader: () => import('../page/login/Login'),\n    loading: LoadingComponent\n});\nexport const App = Loadable({\n    loader: () => import('../App'),\n    loading: LoadingComponent\n});\n\nexport const mockPage = Loadable({\n    loader: () => import('../page/MockPage'),\n    loading: LoadingComponent\n});\n\nexport  const ReadingRoom = Loadable({\n    loader: () => import('../page/ReadingRoom/ReadingRoom'),\n    loading: LoadingComponent\n});\n\n\n"],"sourceRoot":""}